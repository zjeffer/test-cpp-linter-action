name: cpp-linter as action

on:
  workflow_dispatch:
  workflow_call:


jobs:
  test:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        clang-version: ['9','10', '11', '12', '13', '14', '15', '16']
      fail-fast: false

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          repository: cpp-linter/test-cpp-linter-action

      - name: Cache the build artifacts
        id: cache-build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-${{ hashFiles('src/CMakeLists.txt', 'src/demo.cpp', 'src/demo.hpp') }}

      - name: Generate compilation database
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: mkdir build && cmake -Bbuild src

      - name: Run linter as action
        uses: zjeffer/cpp-linter-action@feat/zjeffer/test
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          style: file
          files-changed-only: false
          # to ignore all build folder contents
          ignore: build
          database: ${{github.workspace}}/build/
          verbosity: 9
          version: ${{ matrix.clang-version }}
          thread-comments: ${{ matrix.clang-version == '12' }}
          file-annotations: ${{ matrix.clang-version == '12' }}
          extra-args: -std=c++14 -Wall

      - name: Fail fast?!
        # if: steps.linter.outputs.checks-failed > 0
        run: | 
          echo "some linter checks failed"
          echo "${{ steps.linter.outputs.checks-failed }}"
          echo "${{ env.checks-failed }}"
        # for actual deployment
        # run: exit 1
